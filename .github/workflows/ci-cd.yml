name: CI/CD Pipeline
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_BACKEND: ${{ secrets.DOCKER_USERNAME }}/inventory-backend
      IMAGE_FRONTEND: ${{ secrets.DOCKER_USERNAME }}/inventory-frontend
      IMAGE_TAG: ${{ github.sha }}

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: inventory_management_db
        ports: [ "3306:3306" ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with: { php-version: '8.2', extensions: mbstring, pdo_mysql }

      - name: Install composer deps
        run: composer install --no-interaction --prefer-dist --optimize-autoloader
        working-directory: ./backend


      - name: Debug backend folder
        run: |
          echo "Current dir: $(pwd)"
          ls -la ./backend

      - name: Prepare backend env
        run: |
          cp .env.example backend/.env
          sed -i "s/^DB_USERNAME=.*/DB_USERNAME=root/" backend/.env
          sed -i "s/^DB_PASSWORD=.*/DB_PASSWORD=root/" backend/.env
          # sed -i "s/^APP_KEY=.*/APP_KEY=${{ secrets.APP_KEY }}/" backend/.env
          sed -i "s/^DB_HOST=.*/DB_HOST=db/" backend/.env
          php artisan key:generate --force
        working-directory: ./backend

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h db -uroot -proot --silent; then break; fi
            sleep 5
          done
        working-directory: ./backend


      - name: Generate app key & run tests
        run: |
          php artisan migrate --force
          php artisan db:seed --force
          php artisan test
        working-directory: ./backend

      - name: Setup Node
        uses: actions/setup-node@v4
        with: { node-version: '18' }

      - name: Install frontend deps
        run: npm ci
        working-directory: ./frontend

      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push backend image
        run: |
          docker build -t $IMAGE_BACKEND:latest -t $IMAGE_BACKEND:$IMAGE_TAG ./backend
          docker push $IMAGE_BACKEND:latest
          docker push $IMAGE_BACKEND:$IMAGE_TAG

      - name: Build & push frontend image
        run: |
          docker build -t $IMAGE_FRONTEND:latest -t $IMAGE_FRONTEND:$IMAGE_TAG ./frontend
          docker push $IMAGE_FRONTEND:latest
          docker push $IMAGE_FRONTEND:$IMAGE_TAG

      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            set -e
            mkdir -p ~/inventory
            cd ~/inventory
            if [ ! -d .git ]; then
              git clone git@github.com:YOUR_GITHUB_USER/YOUR_REPO.git .
            else
              git reset --hard
              git pull origin main
            fi
            docker pull ${{ secrets.DOCKER_USERNAME }}/inventory-backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/inventory-frontend:latest
            docker compose down
            docker compose up -d
            # Run migrations inside backend container
            docker compose exec -T backend php artisan migrate --force || true
